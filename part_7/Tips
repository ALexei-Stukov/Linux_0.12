这一部分开始上强度了，涉及到两个核心部分：

1.内存的管理。
    目前Linux0.12使用的是二级页表。
    一级页表是真实的，它和内存页在物理上一一对应。
    但是二级页表是虚拟的，它和一级页表之间不是物理上一一对应的。
    也就是说，二级页表中的元素可能是这样的：
    0号元素->7号一级页表
    1号元素->18号一级页表
    这就是内存虚拟化。方便把多个离散内存在逻辑上整合成一块连续内存。

2.进程调度。
    目前Linux0.12是单核多任务操作系统，因为只有一个核，所以只涉及到进程切换。
    进程切换本质上就是 “保存上下文” “切换task_struct” “恢复上下文” 之类的操作。
    可以说还是不难的。
    真正的难度要到多核+多进程，以及多核+多进程+多线程的时候，难度才会往上飞。
    写时复制 确实让我大开眼界。

3.内核态与用户态。
    这是一个很巧妙的部分。
    用户态到内核态，本质上基于中断来实现的。
    因为特权级切换本质上是“控制流的转移”，我们需要切换到另一个控制流，执行一些任务，然后返回原本的控制流。
    既然是要切换控制流，又要返回控制流。那么我们必须要保存上下文。
    那么，使用中断是再好不过的。
    若想从内核态回到用户态，因为上下文已经准备好了，所以只需要iret即可。